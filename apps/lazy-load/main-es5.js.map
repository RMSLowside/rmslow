{"version":3,"sources":["webpack:///home/smcfall2/deploy/rmslow/rms-frontend/libs/core/src/index.ts","webpack:///home/smcfall2/deploy/rmslow/rms-frontend/libs/core/src/lib/core.module.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["CoreModule","imports","exports","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","id","AppComponent","cfr","injector","title","lazyLoadComponent1","lazyLoadTabContent1","btnContainer","clear","name","Part1Component","component","resolveComponentFactory","componentRef","createComponent","instance","FileExplorerModule","FileExplorerComponent","container3","Part2Component","Part3Component","event","selectedTabName","tab","textLabel","console","log","lazyLoadTabContent2","lazyLoadFileExplorerModule","container1","TabContent1Component","container2","getLazy1","getLazy2","tabSelectionChanged","selector","templateUrl","styleUrls","read","AppModule","declarations","providers","bootstrap","environment","production","err","error"],"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","file":"main-es5.js","sourcesContent":["export * from './lib/core.module';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\n//Angular Material Components\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatListModule} from '@angular/material/list';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatPaginatorModule} from '@angular/material/paginator';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatCheckboxModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule\n  ],\n  exports:[\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatCheckboxModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule\n  ]\n})\nexport class CoreModule {}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","<mat-toolbar>\n  <span>Lazy Load</span>\n</mat-toolbar>\n<div style=\"height: 300px;\">\n  Lazy load on button click to a container\n  <div>\n    <button mat-raised-button color=\"accent\" (click)='getLazy1()'>load part 1</button>\n    <button mat-raised-button color=\"accent\" (click)='getLazy2()'>load part 2</button>\n  </div>\n  <div #btnContainer>\n  </div>\n</div>\n\n<div style=\"height: 300px; padding-top: 30px;\">\n  Lazy load tab content\n  <mat-tab-group backgroundColor=\"accent\" (selectedTabChange)=\"tabSelectionChanged($event)\">\n    <mat-tab label=\"First\">\n      <ng-template matTabContent>\n        <div #container1>\n        </div>\n      </ng-template>\n    </mat-tab>\n    <mat-tab label=\"Second\">\n      <ng-template matTabContent>\n        <div #container2>\n        </div>\n      </ng-template>\n    </mat-tab>\n    <mat-tab label=\"File Explorer\">\n      <ng-template matTabContent>\n        <div #container3>\n        </div>\n      </ng-template>\n    </mat-tab>\n  </mat-tab-group>\n</div>","import { Component, ViewContainerRef, ComponentFactoryResolver, ViewChild, Injector, OnInit, AfterViewInit } from '@angular/core';\n\n@Component({\n  selector: 'rms-frontend-lazy-load',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent implements OnInit, AfterViewInit {\n  title = 'lazy-load';\n\n  @ViewChild('btnContainer', { read: ViewContainerRef }) btnContainer: ViewContainerRef;\n  @ViewChild('container1', { read: ViewContainerRef }) container1: ViewContainerRef;\n  @ViewChild('container2', { read: ViewContainerRef }) container2: ViewContainerRef;\n  @ViewChild('container3', { read: ViewContainerRef }) container3: ViewContainerRef;\n\n  constructor(\n    private cfr: ComponentFactoryResolver,\n    private injector: Injector\n  ) { }\n\n  ngOnInit() {\n  }\n  ngAfterViewInit(): void {\n    //viewContainerRef clear function doesn't clear static component so if inital component needs to be displayed create the component them manually.    \n    this.lazyLoadComponent1();\n    this.lazyLoadTabContent1();\n  }\n\n  async lazyLoadComponent1() {\n    this.btnContainer.clear(); // clear existing component  will not clear static componentu\n    const name = 'test';\n    import('./part1/part1.component').then(\n      ({ Part1Component }) => {\n        const component = this.cfr.resolveComponentFactory(Part1Component);\n        const componentRef = this.btnContainer.createComponent(component);\n        componentRef.instance.name = name;\n      }\n    );\n  }\n\n  async lazyLoadFileExplorerModule() {\n    import('@rms-frontend/file-explorer').then(\n      ({ FileExplorerModule }) => {\n        import('libs/file-explorer/src/lib/file-explorer/file-explorer.component').then(\n          ({ FileExplorerComponent }) => {\n            const component = this.cfr.resolveComponentFactory(FileExplorerComponent);\n            const componentRef = this.container3.createComponent(component);\n          }\n        )\n      })\n  }\n\n  async getLazy1() {\n    this.btnContainer.clear(); // clear existing component  will not clear static componentu\n    const name = 'test';\n    import('./part2/part2.component').then(\n      ({ Part2Component }) => {\n        const component = this.cfr.resolveComponentFactory(Part2Component);\n        const componentRef = this.btnContainer.createComponent(component);\n        componentRef.instance.name = name;\n      }\n    );\n  }\n\n  async getLazy2() {\n    this.btnContainer.clear(); // clear existing component in the container\n    const { Part3Component } = await import('./part3/part3.component');\n    this.btnContainer.createComponent(\n      this.cfr.resolveComponentFactory(Part3Component)\n    );\n  }\n\n  tabSelectionChanged(event) {\n    let selectedTabName = event.tab.textLabel;\n    console.log(selectedTabName);\n\n    switch (selectedTabName) {\n      case 'Frst':\n        this.lazyLoadTabContent1()\n        break;\n\n      case 'Second':\n        this.lazyLoadTabContent2()\n        break;\n      case 'File Explorer':\n        this.lazyLoadFileExplorerModule()\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  async lazyLoadTabContent1() {\n    this.container1.clear();\n    import('./tab-content1/tab-content1.component').then(\n      ({ TabContent1Component }) => {\n        const component = this.cfr.resolveComponentFactory(TabContent1Component);\n        const componentRef = this.container1.createComponent(component);\n      }\n    );\n  }\n\n  async lazyLoadTabContent2() {\n    this.container2.clear();\n    import('./part1/part1.component').then(\n      ({ Part1Component }) => {\n        const component = this.cfr.resolveComponentFactory(Part1Component);\n        const componentRef = this.container2.createComponent(component);\n        componentRef.instance.name = name;\n      }\n    );\n  }\n\n  async lazyLoadTabContent3() {\n    this.container3.clear();\n    import('./part1/part1.component').then(\n      ({ Part1Component }) => {\n        const component = this.cfr.resolveComponentFactory(Part1Component);\n        const componentRef = this.container3.createComponent(component);\n        componentRef.instance.name = name;\n      }\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CoreModule } from '@rms-frontend/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    CoreModule\n  ],\n  providers: [],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}