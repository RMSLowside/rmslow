{"version":3,"sources":["/home/smcfall2/deploy/rmslow/rms-frontend/libs/file-explorer/src/lib/file-explorer/file-explorer.component.ts","/home/smcfall2/deploy/rmslow/rms-frontend/libs/file-explorer/src/lib/file-explorer/file-explorer.component.html","/home/smcfall2/deploy/rmslow/rms-frontend/libs/file-explorer/src/lib/models/file-element.ts","/home/smcfall2/deploy/rmslow/rms-frontend/libs/file-explorer/src/lib/new-folder-modal/new-folder-modal.component.ts","/home/smcfall2/deploy/rmslow/rms-frontend/libs/file-explorer/src/lib/new-folder-modal/new-folder-modal.component.html","/home/smcfall2/deploy/rmslow/rms-frontend/libs/file-explorer/src/lib/rename-modal/rename-modal.component.ts","/home/smcfall2/deploy/rmslow/rms-frontend/libs/file-explorer/src/lib/rename-modal/rename-modal.component.html","/home/smcfall2/deploy/rmslow/rms-frontend/node_modules/ngx-file-drop/__ivy_ngcc__/fesm2015/ngx-file-drop.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOuB;AAC8B;AAEA;AACoC;AACX;;;;;;;;;;;;ICV1E,4EACE;IAD4C,gUAAsB;IAClE,2EACE;IAAA,uEACF;IAAA,4DAAW;IACb,4DAAS;;;IAGT,2EACG;IAAA,uDAAsC;IAAA,4DACxC;;;IADE,0DAAsC;IAAtC,iHAAsC;;;;IAEzC,4EACE;IAD8C,iUAAuB;IACrE,2EACE;IAAA,kEACF;IAAA,4DAAW;IACb,4DAAS;;;IAuCD,+EAKE;IAAA,mEACF;IAAA,4DAAW;;;IACX,+EAKE;IAAA,8EACF;IAAA,4DAAW;;;;;;IA/Bf,oFAIE;IAAA,0EAKO;IACP,0EAQE;IAHA,+XAAmC,4PACpB,eAAsB,SAAE,uBAAuB,IAD3B;IAGnC,6IAKE;IAEF,6IAKE;IAGF,uEAAM;IAAA,uDAAkB;IAAA,4DAAO;IACjC,4DAAM;IACR,4DAAgB;;;;;IA9BZ,0DAA8B;IAA9B,kFAA8B;IAO9B,0DAEE;IAFF,+LAEE;IAOA,0DAAwB;IAAxB,sFAAwB;IAOxB,0DAAyB;IAAzB,uFAAyB;IAKrB,0DAAkB;IAAlB,iFAAkB;;;;IA4B9B,6EAKE;IAHA,mbAA0B;IAG1B,2EAAU;IAAA,+DAAI;IAAA,4DAAW;IACzB,uEAAM;IAAA,kEAAO;IAAA,4DAAO;IACtB,4DAAS;;;;IACT,6EAKE;IAHA,mbAA0B;IAG1B,2EAAU;IAAA,oEAAS;IAAA,4DAAW;IAC9B,uEAAM;IAAA,kEAAO;IAAA,4DAAO;IACtB,4DAAS;;;;;IAnCT,6EAKE;IAAA,2EAAU;IAAA,oEAAS;IAAA,4DAAW;IAC9B,uEAAM;IAAA,kEAAO;IAAA,4DAAO;IACtB,4DAAS;IACT,6EAKE;IAHA,wXAAmC;IAGnC,2EAAU;IAAA,+DAAI;IAAA,4DAAW;IACzB,uEAAM;IAAA,iEAAM;IAAA,4DAAO;IACrB,4DAAS;IACT,8EACE;IADoB,sXAAgC;IACpD,4EAAU;IAAA,kEAAM;IAAA,4DAAW;IAC3B,wEAAM;IAAA,kEAAM;IAAA,4DAAO;IACrB,4DAAS;IACT,yIAKE;IAGF,yIAKE;;;;;IA/BA,kFAAgC;IAShC,0DAAgC;IAAhC,gGAAgC;IAYhC,2DAAyB;IAAzB,uFAAyB;IAQzB,0DAAyB;IAAzB,uFAAyB;;;;IAWzB,6EASE;IAFA,siBAAoC;IAEpC,uDACF;IAAA,4DAAS;;;IADP,0DACF;IADE,4FACF;;;IAXF,wEACE;IAAA,sJASE;IAEJ,qEAAe;;;;;IAVX,0DAIC;IAJD,mKAIC;;;IANL,mJACE;;;IADY,yFAAqC;;;;IAiBzD,oFASgB;IAJd,kXAAyC,KAAK,IAAC,ymBAEH,KAAK,IAFF;IAIjD,4DAAgB;;ADvHT,MAAM,qBAAqB;IAChC,YAAmB,MAAiB;QAAjB,WAAM,GAAN,MAAM,CAAW;QAGpC,aAAQ,GAAkB,EAAE,CAAC;QAC7B,kBAAa,GAAkB,EAAE,CAAC;QASxB,gBAAW,GAAG,IAAI,0DAAY,EAAoB,CAAC;QACnD,kBAAa,GAAG,IAAI,0DAAY,EAAiB,CAAC;QAClD,mBAAc,GAAG,IAAI,0DAAY,EAAe,CAAC;QACjD,mBAAc,GAAG,IAAI,0DAAY,EAAe,CAAC;QACjD,iBAAY,GAAG,IAAI,0DAAY,EAGrC,CAAC;QACK,kBAAa,GAAG,IAAI,0DAAY,EAAe,CAAC;QAChD,iBAAY,GAAG,IAAI,0DAAY,EAAe,CAAC;QAC/C,gBAAW,GAAG,IAAI,0DAAY,EAAE,CAAC;QACjC,mBAAc,GAAG,IAAI,0DAAY,EAAe,CAAC;QACjD,mBAAc,GAAG,IAAI,0DAAY,EAAe,CAAC;IAzBpB,CAAC;IAKxC,IACI,YAAY,CAAC,KAAoB;QACnC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IAkBD,aAAa,CAAC,OAAoB;QAChC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YACxB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC;gBAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBAC3B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjC,CAAC,CAAC,CAAC;SACJ;;YAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC3C,CAAC;IAED,QAAQ,CAAC,OAAoB,EAAE,KAAiB;QAC9C,IAAI,KAAK,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;SAC5D;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,IAAI,OAAO,CAAC,QAAQ,EAAE;gBACpB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAClC;iBAAM;gBACL,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACjC;SACF;IACH,CAAC;IAED,UAAU;QACR,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IAED,WAAW,CAAC,OAAoB,EAAE,MAAmB;QACnD,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YACxB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC;gBAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBAC3B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;YAC5D,CAAC,CAAC,CAAC;SACJ;;YAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IACtE,CAAC;IAED,mBAAmB;QACjB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oGAAuB,CAAC,CAAC;QAC5D,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACtC,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;aACtC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB,CAAC,OAAoB;QACnC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yFAAoB,CAAC,CAAC;QACzD,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACtC,IAAI,GAAG,EAAE;gBACP,OAAO,CAAC,IAAI,GAAG,GAAG,CAAC;gBACnB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACnC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,KAAiB,EAAE,OAAoB,EAAE,SAAyB;QACzE,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,SAAS,CAAC,QAAQ,EAAE,CAAC;IACvB,CAAC;IAED,UAAU,CAAC,KAAK;QACd,MAAM,KAAK,GAAa,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC;QAC/C,MAAM,SAAS,GAAkB,EAAE,CAAC;QACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrC,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACtB,MAAM,QAAQ,GAAG,IAAI,gEAAW,EAAE,CAAC;YACnC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC;YAC3B,QAAQ,CAAC,QAAQ,GAAG,KAAK,CAAC;YAC1B,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YAC1B,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC1B;QACD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACrC,CAAC;IAEM,OAAO,CAAC,KAAyB,EAAE,OAAqB;QAC7D,MAAM,SAAS,GAAkB,EAAE,CAAC;QACpC,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;QAC3B,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,KAAK,MAAM,WAAW,IAAI,KAAK,EAAE;YAC/B,gBAAgB;YAChB,IAAI,WAAW,CAAC,SAAS,CAAC,MAAM,EAAE;gBAChC,MAAM,SAAS,GAAG,WAAW,CAAC,SAAgC,CAAC;gBAC/D,SAAS,CAAC,IAAI,CAAC,CAAC,IAAU,EAAE,EAAE;oBAC5B,IAAI,OAAO,GAAG,WAAW,CAAC,YAAY,CAAC;oBACvC,MAAM,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACrC,SAAS,CAAC,GAAG,EAAE,CAAC;oBAChB,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC9B,KAAK,EAAE,CAAC;oBACR,MAAM,QAAQ,GAAG,IAAI,gEAAW,EAAE,CAAC;oBACnC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC;oBAC3B,QAAQ,CAAC,QAAQ,GAAG,KAAK,CAAC;oBAC1B,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC1B,QAAQ,CAAC,MAAM,GAAG,OAAO,CAAC;oBAC1B,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACzB,IAAI,KAAK,KAAK,KAAK;wBAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC1D,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,yEAAyE;gBACzE,MAAM,SAAS,GAAG,WAAW,CAAC,SAAqC,CAAC;aACrE;SACF;IACH,CAAC;IAEM,QAAQ,CAAC,KAAK;QACnB,uBAAuB;IACzB,CAAC;IAEM,SAAS,CAAC,KAAK;QACpB,wBAAwB;IAC1B,CAAC;IAED,OAAO,CAAC,IAAiB;QACvB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAED,OAAO,CAAC,IAAiB;QACvB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAEO,aAAa,CAAC,KAAY,EAAE,OAAY;QAC9C,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrC,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YAChB,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACrB;aAAM;YACL,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SACxB;QACD,OAAO,KAAK,CAAC;IACf,CAAC;;0FA1JU,qBAAqB;qGAArB,qBAAqB;;QC1BlC,yEACE;QADG,8JAAsB,IAAI,IAAC;QAC9B,8EACE;QAAA,uHACE;QAIF,0EAAgC;QAAA,uDAAsB;QAAA,4DAAO;QAC7D,qEAA4B;QAC5B,mHACG;QAEH,uHACE;QAIF,4EACE;QADsB,6IAAS,yBAAqB,IAAC;QACrD,2EACE;QAAA,+EACF;QAAA,4DAAW;QACb,4DAAS;QACT,6EACE;QADsB,4RAAS,WAAgB,IAAC;QAChD,4EACE;QAAA,0EACF;QAAA,4DAAW;QACb,4DAAS;QACX,4DAAc;QAEd,0EAME;QAAA,0EACE;QAAA,oFACE;QAAA,wIAIE;QAgCJ,4DAAgB;QAClB,4DAAM;QACR,4DAAM;QACN,oFACE;QAAA,qIACE;QAqCJ,4DAAW;QAEX,sFACE;QAAA,oIACE;QAcJ,4DAAW;QACb,4DAAM;QAEN,wIASA;QAEA,iFACA;QAD6C,qJAAU,sBAAkB,IAAC;QAA1E,4DACA;;QAlJ4B,0DAAqB;QAArB,mFAAqB;QAKb,0DAAsB;QAAtB,+FAAsB;QAEtB,0DAAuB;QAAvB,qFAAuB;QAG/C,0DAAuB;QAAvB,qFAAuB;QA0BzB,2DAAqC;QAArC,sFAAqC;QAsCf,0DAAwB;QAAxB,iFAAwB;QA6DtD,0DAAe;QAAf,6EAAe;;6FD/GJ,qBAAqB;cAPjC,uDAAS;eAAC;gBACT,+CAA+C;gBAC/C,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,gCAAgC,CAAC;gBAC7C,eAAe,EAAE,qEAAuB,CAAC,MAAM;aAChD;;kBAOE,mDAAK;mBAAC,cAAc;;kBAKpB,mDAAK;;kBACL,mDAAK;;kBAEL,oDAAM;;kBACN,oDAAM;;kBACN,oDAAM;;kBACN,oDAAM;;kBACN,oDAAM;;kBAIN,oDAAM;;kBACN,oDAAM;;kBACN,oDAAM;;kBACN,oDAAM;;kBACN,oDAAM;;;;;;;;;;;;;;AEpDT;AAAA;AAAO,MAAM,WAAW;CAMvB;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;AAO3C,MAAM,uBAAuB;IAGlC,gBAAe,CAAC;IAEhB,QAAQ,KAAU,CAAC;;8FALR,uBAAuB;uGAAvB,uBAAuB;QCPpC,wEAAqB;QAAA,8EAAmB;QAAA,4DAAK;QAE7C,qFACE;QAAA,oFACE;QAAA,2EACF;QAD4C,+LAAwB;QAAlE,4DACF;QAAA,4DAAiB;QACnB,4DAAqB;QAErB,qFACE;QAAA,4EAA2C;QAAA,iEAAM;QAAA,4DAAS;QAC1D,4EACE;QAAA,+DACF;QAAA,4DAAS;QACX,4DAAqB;;QATyB,0DAAwB;QAAxB,mFAAwB;QAM1C,0DAA+B;QAA/B,4FAA+B;;6FDH9C,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACjD;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;AAO3C,MAAM,oBAAoB;IAE/B,gBAAe,CAAC;IAEhB,QAAQ,KAAU,CAAC;;wFAJR,oBAAoB;oGAApB,oBAAoB;QCPjC,wEAAqB;QAAA,yEAAc;QAAA,4DAAK;QAExC,qFACE;QAAA,oFACE;QAAA,2EACF;QAD4C,4LAAwB;QAAlE,4DACF;QAAA,4DAAiB;QACnB,4DAAqB;QAErB,qFACE;QAAA,4EAA2C;QAAA,iEAAM;QAAA,4DAAS;QAC1D,4EACE;QAAA,+DACF;QAAA,4DAAS;QACX,4DAAqB;;QATyB,0DAAwB;QAAxB,mFAAwB;QAM1C,0DAA+B;QAA/B,4FAA+B;;6FDH9C,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiK;AACpI;AACkB;;AAE/C;AACA,gCAAgC,0BAA0B,KAAK,+BAA+B;AAC9F,yCAAyC,6BAA6B,KAAK;AAC3E,4BAA4B,sBAAsB;AAClD;AACwC;AACE;;AAE1C;AACA,qEAAqE;AACrE,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD,qBAAqB,2DAAoB;AACzC,IAAI,uDAAgB;AACpB,IAAI,+DAAwB;AAC5B,CAAC;AACD,qEAAqE;AACrE,kBAAkB,8DAAuB;AACzC,IAAI,4DAAqB;AACzB,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,qGAAqG,CAAC,2DAAoB,QAAQ,kBAAkB,2DAAoB,IAAI,0CAA0C,EAAE;AAC7O,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,CAAC;AACD,qBAAqB,2DAAoB;AACzC,IAAI,uDAAgB;AACpB,IAAI,mEAA4B;AAChC,IAAI,wDAAiB;AACrB,CAAC;AACD,+DAA+D;AAC/D,IAAI,wDAAiB;AACrB,IAAI,wDAAiB;AACrB,CAAC;AACD,qBAAqB,2DAAoB;AACzC,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,CAAC;AACD,+DAA+D;AAC/D,2BAA2B,SAAS,wBAAwB;AAC5D;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG,uDAAuD,+DAAwB,CAAC,yDAAkB,GAAG;AACzM,2CAA2C,+DAAwB,EAAE,gGAAgG;AACrK;AACA,KAAK,OAAO,yDAAW;AACvB;AACA,oFAAoF,yDAAW;AAC/F;;AAEA,oBAAoB,SAAI,IAAI,SAAI;AAChC;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,oBAAoB,SAAI,IAAI,SAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C,8BAA8B,0DAAY;AAC1C,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,oBAAoB,uBAAuB;AAC3C;AACA,8CAA8C,MAAM;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,kDAAK;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,2CAA2C,oBAAoB;AAC/D;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,wCAAwC,+DAAwB,CAAC,oDAAa,GAAG,+DAAwB,CAAC,uDAAgB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","file":"default~libs-file-explorer-src-lib-file-explorer-file-explorer-component~rms-frontend-file-explorer-es2015.js","sourcesContent":["import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ComponentFactoryResolver\n} from '@angular/core';\nimport { FileElement } from '../models/file-element';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatDialog } from '@angular/material/dialog';\nimport { NewFolderModalComponent } from '../new-folder-modal/new-folder-modal.component';\nimport { RenameModalComponent } from '../rename-modal/rename-modal.component';\nimport {\n  NgxFileDropEntry,\n  FileSystemFileEntry,\n  FileSystemDirectoryEntry\n} from 'ngx-file-drop';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'rms-file-explorer',\n  templateUrl: './file-explorer.component.html',\n  styleUrls: ['./file-explorer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileExplorerComponent {\n  constructor(public dialog: MatDialog) {}\n\n  dragged: boolean;\n  selected: FileElement[] = [];\n  _fileElements: FileElement[] = [];\n  @Input('fileElements')\n  set fileElements(value: FileElement[]) {\n    this._fileElements = value;\n    this.selected = [];\n  }\n  @Input() canNavigateUp: boolean;\n  @Input() path: string;\n\n  @Output() folderAdded = new EventEmitter<{ name: string }>();\n  @Output() filesUploaded = new EventEmitter<FileElement[]>();\n  @Output() elementRemoved = new EventEmitter<FileElement>();\n  @Output() elementRenamed = new EventEmitter<FileElement>();\n  @Output() elementMoved = new EventEmitter<{\n    element: FileElement;\n    moveTo: FileElement;\n  }>();\n  @Output() navigatedDown = new EventEmitter<FileElement>();\n  @Output() fileSelected = new EventEmitter<FileElement>();\n  @Output() navigatedUp = new EventEmitter();\n  @Output() encryptEmitter = new EventEmitter<FileElement>();\n  @Output() decryptEmitter = new EventEmitter<FileElement>();\n\n  deleteElement(element: FileElement) {\n    if (this.selected.length) {\n      if (!this.selected.includes(element)) this.selected.push(element);\n      this.selected.forEach(elem => {\n        this.elementRemoved.emit(elem);\n      });\n    } else this.elementRemoved.emit(element);\n  }\n\n  navigate(element: FileElement, event: MouseEvent) {\n    if (event.ctrlKey) {\n      this.selected = this.toggleInArray(this.selected, element);\n    } else {\n      this.selected = [];\n      if (element.isFolder) {\n        this.navigatedDown.emit(element);\n      } else {\n        this.fileSelected.emit(element);\n      }\n    }\n  }\n\n  navigateUp() {\n    this.navigatedUp.emit();\n  }\n\n  moveElement(element: FileElement, moveTo: FileElement) {\n    if (this.selected.length) {\n      if (!this.selected.includes(element)) this.selected.push(element);\n      this.selected.forEach(elem => {\n        this.elementMoved.emit({ element: elem, moveTo: moveTo });\n      });\n    } else this.elementMoved.emit({ element: element, moveTo: moveTo });\n  }\n\n  openNewFolderDialog() {\n    const dialogRef = this.dialog.open(NewFolderModalComponent);\n    dialogRef.afterClosed().subscribe(res => {\n      if (res) {\n        this.folderAdded.emit({ name: res });\n      }\n    });\n  }\n\n  openRenameDialog(element: FileElement) {\n    const dialogRef = this.dialog.open(RenameModalComponent);\n    dialogRef.afterClosed().subscribe(res => {\n      if (res) {\n        element.name = res;\n        this.elementRenamed.emit(element);\n      }\n    });\n  }\n\n  openMenu(event: MouseEvent, element: FileElement, viewChild: MatMenuTrigger) {\n    event.preventDefault();\n    viewChild.openMenu();\n  }\n\n  uploadFile(event) {\n    const files: FileList = event.srcElement.files;\n    const fileArray: FileElement[] = [];\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      const fileElem = new FileElement();\n      fileElem.actualFile = file;\n      fileElem.isFolder = false;\n      fileElem.name = file.name;\n      fileArray.push(fileElem);\n    }\n    this.filesUploaded.emit(fileArray);\n  }\n\n  public dropped(files: NgxFileDropEntry[], element?: FileElement) {\n    const fileArray: FileElement[] = [];\n    const total = files.length;\n    let count = 0;\n    for (const droppedFile of files) {\n      // Is it a file?\n      if (droppedFile.fileEntry.isFile) {\n        const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\n        fileEntry.file((file: File) => {\n          let relPath = droppedFile.relativePath;\n          const pathArray = relPath.split('/');\n          pathArray.pop();\n          relPath = pathArray.join('/');\n          count++;\n          const fileElem = new FileElement();\n          fileElem.actualFile = file;\n          fileElem.isFolder = false;\n          fileElem.name = file.name;\n          fileElem.parent = relPath;\n          fileArray.push(fileElem);\n          if (count === total) this.filesUploaded.emit(fileArray);\n        });\n      } else {\n        // It was a directory (empty directories are added, otherwise only files)\n        const fileEntry = droppedFile.fileEntry as FileSystemDirectoryEntry;\n      }\n    }\n  }\n\n  public fileOver(event) {\n    //Add any fileOver code\n  }\n\n  public fileLeave(event) {\n    //Add any fileLeave code\n  }\n\n  encrypt(file: FileElement) {\n    this.encryptEmitter.emit(file);\n  }\n\n  decrypt(file: FileElement) {\n    this.decryptEmitter.emit(file);\n  }\n\n  private toggleInArray(array: any[], element: any) {\n    const index = array.indexOf(element);\n    if (index === -1) {\n      array.push(element);\n    } else {\n      array.splice(index, 1);\n    }\n    return array;\n  }\n}\n","<div (dragover)=\"dragged = true\">\n  <mat-toolbar>\n    <button mat-icon-button *ngIf=\"canNavigateUp\" (click)=\"navigateUp()\">\n      <mat-icon>\n        arrow_back\n      </mat-icon>\n    </button>\n    <span style=\"margin-left: 8px\"> {{ path || 'Files' }} </span>\n    <span class=\"spacer\"></span>\n    <span style=\"font-size: small;\" *ngIf=\"selected.length\"\n      >{{ selected.length }} File(s) Selected</span\n    >\n    <button *ngIf=\"selected.length\" mat-icon-button (click)=\"selected = []\">\n      <mat-icon>\n        clear\n      </mat-icon>\n    </button>\n    <button mat-icon-button (click)=\"openNewFolderDialog()\">\n      <mat-icon>\n        create_new_folder\n      </mat-icon>\n    </button>\n    <button mat-icon-button (click)=\"uploader.click()\">\n      <mat-icon>\n        cloud_upload\n      </mat-icon>\n    </button>\n  </mat-toolbar>\n\n  <div\n    class=\"container\"\n    fxFlex\n    fxLayout=\"row\"\n    fxLayoutAlign=\"space-between stretch\"\n  >\n    <div class=\"content\" fxFlex fxLayout=\"row\">\n      <mat-grid-list cols=\"8\" rowHeight=\"100px\" fxFlex>\n        <mat-grid-tile\n          *ngFor=\"let element of _fileElements\"\n          class=\"file-or-folder\"\n        >\n          <span\n            [matMenuTriggerFor]=\"rootMenu\"\n            [matMenuTriggerData]=\"{ element: element }\"\n            #menuTrigger=\"matMenuTrigger\"\n          >\n          </span>\n          <div\n            class=\"element-container\"\n            [ngStyle]=\"{\n              'background-color': selected.includes(element) ? 'grey' : ''\n            }\"\n            (click)=\"navigate(element, $event)\"\n            (contextmenu)=\"menuTrigger.openMenu(); $event.preventDefault()\"\n          >\n            <mat-icon\n              color=\"primary\"\n              class=\"file-or-folder-icon pointer\"\n              *ngIf=\"element.isFolder\"\n            >\n              folder\n            </mat-icon>\n            <mat-icon\n              color=\"primary\"\n              class=\"file-or-folder-icon pointer\"\n              *ngIf=\"!element.isFolder\"\n            >\n              insert_drive_file\n            </mat-icon>\n\n            <span>{{ element.name }}</span>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n  </div>\n  <mat-menu #rootMenu=\"matMenu\" [overlapTrigger]=\"false\">\n    <ng-template matMenuContent let-element=\"element\">\n      <button\n        mat-menu-item\n        [matMenuTriggerFor]=\"moveToMenu\"\n        [matMenuTriggerData]=\"{ self: element }\"\n      >\n        <mat-icon>open_with</mat-icon>\n        <span>Move To</span>\n      </button>\n      <button\n        mat-menu-item\n        (click)=\"openRenameDialog(element)\"\n        [disabled]=\"selected.length > 0\"\n      >\n        <mat-icon>edit</mat-icon>\n        <span>Rename</span>\n      </button>\n      <button mat-menu-item (click)=\"deleteElement(element)\">\n        <mat-icon>delete</mat-icon>\n        <span>Delete</span>\n      </button>\n      <button\n        mat-menu-item\n        (click)=\"encrypt(element)\"\n        *ngIf=\"!element.isFolder\"\n      >\n        <mat-icon>lock</mat-icon>\n        <span>Encrypt</span>\n      </button>\n      <button\n        mat-menu-item\n        (click)=\"decrypt(element)\"\n        *ngIf=\"!element.isFolder\"\n      >\n        <mat-icon>lock_open</mat-icon>\n        <span>Decrypt</span>\n      </button>\n    </ng-template>\n  </mat-menu>\n\n  <mat-menu #moveToMenu=\"matMenu\">\n    <ng-template matMenuContent let-self=\"self\">\n      <ng-container *ngFor=\"let element of _fileElements\">\n        <button\n          *ngIf=\"\n            element.isFolder &&\n            element.id !== self.id &&\n            !selected.includes(element)\n          \"\n          mat-menu-item\n          (click)=\"moveElement(self, element)\"\n        >\n          {{ element.name }}\n        </button>\n      </ng-container>\n    </ng-template>\n  </mat-menu>\n</div>\n\n<ngx-file-drop\n  *ngIf=\"dragged\"\n  dropZoneLabel=\"Drop files here\"\n  dropZoneClassName=\"drop-area\"\n  contentClassName=\"drop-content\"\n  (onFileDrop)=\"dropped($event); dragged = false\"\n  (onFileOver)=\"fileOver($event)\"\n  (onFileLeave)=\"fileLeave($event); dragged = false\"\n>\n</ngx-file-drop>\n\n<input hidden multiple type=\"file\" #uploader (change)=\"uploadFile($event)\" />\n","export class FileElement {\n  id?: string;\n  isFolder: boolean;\n  name: string;\n  parent: string;\n  actualFile?: File;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 's3-new-folder-modal',\n  templateUrl: './new-folder-modal.component.html',\n  styleUrls: ['./new-folder-modal.component.scss']\n})\nexport class NewFolderModalComponent implements OnInit {\n  folderName: string;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<h1 mat-dialog-title>Create a new folder</h1>\n\n<mat-dialog-content>\n  <mat-form-field class=\"example-full-width\">\n    <input matInput placeholder=\"Folder Name\" [(ngModel)]=\"folderName\" />\n  </mat-form-field>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n  <button mat-raised-button mat-dialog-close>Cancel</button>\n  <button mat-raised-button [mat-dialog-close]=\"folderName\" color=\"primary\">\n    OK\n  </button>\n</mat-dialog-actions>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 's3-rename-modal',\n  templateUrl: './rename-modal.component.html',\n  styleUrls: ['./rename-modal.component.scss']\n})\nexport class RenameModalComponent implements OnInit {\n  folderName: string;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<h1 mat-dialog-title>Rename Element</h1>\n\n<mat-dialog-content>\n  <mat-form-field class=\"example-full-width\">\n    <input matInput placeholder=\"Folder Name\" [(ngModel)]=\"folderName\" />\n  </mat-form-field>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n  <button mat-raised-button mat-dialog-close>Cancel</button>\n  <button mat-raised-button [mat-dialog-close]=\"folderName\" color=\"primary\">\n    OK\n  </button>\n</mat-dialog-actions>\n","import { TemplateRef, Directive, EventEmitter, NgZone, Renderer2, Input, Output, ContentChild, ViewChild, ElementRef, Component, NgModule } from '@angular/core';\nimport { timer } from 'rxjs';\nimport { CommonModule } from '@angular/common';\n\n/**\r\n * fileEntry is an instance of {@link FileSystemFileEntry} or {@link FileSystemDirectoryEntry}.\r\n * Which one is it can be checked using {@link FileSystemEntry.isFile} or {@link FileSystemEntry.isDirectory}\r\n * properties of the given {@link FileSystemEntry}.\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"fileSelector\"];\nfunction NgxFileDropComponent_ng_template_4_div_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r192 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r192.dropZoneLabel);\n} }\nfunction NgxFileDropComponent_ng_template_4_div_1_Template(rf, ctx) { if (rf & 1) {\n    const _r195 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelementStart(1, \"input\", 9);\n    ɵngcc0.ɵɵlistener(\"click\", function NgxFileDropComponent_ng_template_4_div_1_Template_input_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r195); const ctx_r194 = ɵngcc0.ɵɵnextContext(2); return ctx_r194.openFileSelector($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r193 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵpropertyInterpolate(\"value\", ctx_r193.browseBtnLabel);\n    ɵngcc0.ɵɵproperty(\"className\", ctx_r193.browseBtnClassName);\n} }\nfunction NgxFileDropComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgxFileDropComponent_ng_template_4_div_0_Template, 2, 1, \"div\", 6);\n    ɵngcc0.ɵɵtemplate(1, NgxFileDropComponent_ng_template_4_div_1_Template, 2, 2, \"div\", 7);\n} if (rf & 2) {\n    const ctx_r190 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r190.dropZoneLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r190.showBrowseBtn);\n} }\nfunction NgxFileDropComponent_ng_template_6_Template(rf, ctx) { }\nconst _c1 = function (a0) { return { openFileSelector: a0 }; };\nclass NgxFileDropEntry {\r\n    constructor(relativePath, fileEntry) {\r\n        this.relativePath = relativePath;\r\n        this.fileEntry = fileEntry;\r\n    }\r\n}\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nlet NgxFileDropContentTemplateDirective = class NgxFileDropContentTemplateDirective {\r\n    constructor(template) {\r\n        this.template = template;\r\n    }\r\n};\nNgxFileDropContentTemplateDirective.ɵfac = function NgxFileDropContentTemplateDirective_Factory(t) { return new (t || NgxFileDropContentTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNgxFileDropContentTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgxFileDropContentTemplateDirective, selectors: [[\"\", \"ngx-file-drop-content-tmp\", \"\"]] });\r\nNgxFileDropContentTemplateDirective.ctorParameters = () => [\r\n    { type: TemplateRef }\r\n];\r\nNgxFileDropContentTemplateDirective = __decorate([ __metadata(\"design:paramtypes\", [TemplateRef])\r\n], NgxFileDropContentTemplateDirective);\n\nvar __decorate$1 = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata$1 = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nlet NgxFileDropComponent = class NgxFileDropComponent {\r\n    constructor(zone, renderer) {\r\n        this.zone = zone;\r\n        this.renderer = renderer;\r\n        this.accept = '*';\r\n        this.directory = false;\r\n        this.multiple = true;\r\n        this.dropZoneLabel = '';\r\n        this.dropZoneClassName = 'ngx-file-drop__drop-zone';\r\n        this.contentClassName = 'ngx-file-drop__content';\r\n        this.showBrowseBtn = false;\r\n        this.browseBtnClassName = 'btn btn-primary btn-xs ngx-file-drop__browse-btn';\r\n        this.browseBtnLabel = 'Browse files';\r\n        this.onFileDrop = new EventEmitter();\r\n        this.onFileOver = new EventEmitter();\r\n        this.onFileLeave = new EventEmitter();\r\n        this.isDraggingOverDropZone = false;\r\n        this.globalDraggingInProgress = false;\r\n        this.files = [];\r\n        this.numOfActiveReadEntries = 0;\r\n        this.helperFormEl = null;\r\n        this.fileInputPlaceholderEl = null;\r\n        this.dropEventTimerSubscription = null;\r\n        this._disabled = false;\r\n        this.openFileSelector = (event) => {\r\n            if (this.fileSelector && this.fileSelector.nativeElement) {\r\n                this.fileSelector.nativeElement.click();\r\n            }\r\n        };\r\n        this.globalDragStartListener = this.renderer.listen('document', 'dragstart', (evt) => {\r\n            this.globalDraggingInProgress = true;\r\n        });\r\n        this.globalDragEndListener = this.renderer.listen('document', 'dragend', (evt) => {\r\n            this.globalDraggingInProgress = false;\r\n        });\r\n    }\r\n    get disabled() { return this._disabled; }\r\n    set disabled(value) {\r\n        this._disabled = (value != null && `${value}` !== 'false');\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.dropEventTimerSubscription) {\r\n            this.dropEventTimerSubscription.unsubscribe();\r\n            this.dropEventTimerSubscription = null;\r\n        }\r\n        this.globalDragStartListener();\r\n        this.globalDragEndListener();\r\n        this.files = [];\r\n        this.helperFormEl = null;\r\n        this.fileInputPlaceholderEl = null;\r\n    }\r\n    onDragOver(event) {\r\n        if (!this.isDropzoneDisabled()) {\r\n            if (!this.isDraggingOverDropZone) {\r\n                this.isDraggingOverDropZone = true;\r\n                this.onFileOver.emit(event);\r\n            }\r\n            this.preventAndStop(event);\r\n        }\r\n    }\r\n    onDragLeave(event) {\r\n        if (!this.isDropzoneDisabled()) {\r\n            if (this.isDraggingOverDropZone) {\r\n                this.isDraggingOverDropZone = false;\r\n                this.onFileLeave.emit(event);\r\n            }\r\n            this.preventAndStop(event);\r\n        }\r\n    }\r\n    dropFiles(event) {\r\n        if (!this.isDropzoneDisabled()) {\r\n            this.isDraggingOverDropZone = false;\r\n            if (event.dataTransfer) {\r\n                event.dataTransfer.dropEffect = 'copy';\r\n                let items;\r\n                if (event.dataTransfer.items) {\r\n                    items = event.dataTransfer.items;\r\n                }\r\n                else {\r\n                    items = event.dataTransfer.files;\r\n                }\r\n                this.preventAndStop(event);\r\n                this.checkFiles(items);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Processes the change event of the file input and adds the given files.\r\n     * @param Event event\r\n     */\r\n    uploadFiles(event) {\r\n        if (!this.isDropzoneDisabled()) {\r\n            if (event.target) {\r\n                const items = event.target.files || [];\r\n                this.checkFiles(items);\r\n                this.resetFileInput();\r\n            }\r\n        }\r\n    }\r\n    checkFiles(items) {\r\n        for (let i = 0; i < items.length; i++) {\r\n            const item = items[i];\r\n            let entry = null;\r\n            if (this.canGetAsEntry(item)) {\r\n                entry = item.webkitGetAsEntry();\r\n            }\r\n            if (!entry) {\r\n                if (item) {\r\n                    const fakeFileEntry = {\r\n                        name: item.name,\r\n                        isDirectory: false,\r\n                        isFile: true,\r\n                        file: (callback) => {\r\n                            callback(item);\r\n                        },\r\n                    };\r\n                    const toUpload = new NgxFileDropEntry(fakeFileEntry.name, fakeFileEntry);\r\n                    this.addToQueue(toUpload);\r\n                }\r\n            }\r\n            else {\r\n                if (entry.isFile) {\r\n                    const toUpload = new NgxFileDropEntry(entry.name, entry);\r\n                    this.addToQueue(toUpload);\r\n                }\r\n                else if (entry.isDirectory) {\r\n                    this.traverseFileTree(entry, entry.name);\r\n                }\r\n            }\r\n        }\r\n        if (this.dropEventTimerSubscription) {\r\n            this.dropEventTimerSubscription.unsubscribe();\r\n        }\r\n        this.dropEventTimerSubscription = timer(200, 200)\r\n            .subscribe(() => {\r\n            if (this.files.length > 0 && this.numOfActiveReadEntries === 0) {\r\n                const files = this.files;\r\n                this.files = [];\r\n                this.onFileDrop.emit(files);\r\n            }\r\n        });\r\n    }\r\n    traverseFileTree(item, path) {\r\n        if (item.isFile) {\r\n            const toUpload = new NgxFileDropEntry(path, item);\r\n            this.files.push(toUpload);\r\n        }\r\n        else {\r\n            path = path + '/';\r\n            const dirReader = item.createReader();\r\n            let entries = [];\r\n            const readEntries = () => {\r\n                this.numOfActiveReadEntries++;\r\n                dirReader.readEntries((result) => {\r\n                    if (!result.length) {\r\n                        // add empty folders\r\n                        if (entries.length === 0) {\r\n                            const toUpload = new NgxFileDropEntry(path, item);\r\n                            this.zone.run(() => {\r\n                                this.addToQueue(toUpload);\r\n                            });\r\n                        }\r\n                        else {\r\n                            for (let i = 0; i < entries.length; i++) {\r\n                                this.zone.run(() => {\r\n                                    this.traverseFileTree(entries[i], path + entries[i].name);\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // continue with the reading\r\n                        entries = entries.concat(result);\r\n                        readEntries();\r\n                    }\r\n                    this.numOfActiveReadEntries--;\r\n                });\r\n            };\r\n            readEntries();\r\n        }\r\n    }\r\n    /**\r\n     * Clears any added files from the file input element so the same file can subsequently be added multiple times.\r\n     */\r\n    resetFileInput() {\r\n        if (this.fileSelector && this.fileSelector.nativeElement) {\r\n            const fileInputEl = this.fileSelector.nativeElement;\r\n            const fileInputContainerEl = fileInputEl.parentElement;\r\n            const helperFormEl = this.getHelperFormElement();\r\n            const fileInputPlaceholderEl = this.getFileInputPlaceholderElement();\r\n            // Just a quick check so we do not mess up the DOM (will never happen though).\r\n            if (fileInputContainerEl !== helperFormEl) {\r\n                // Insert the form input placeholder in the DOM before the form input element.\r\n                this.renderer.insertBefore(fileInputContainerEl, fileInputPlaceholderEl, fileInputEl);\r\n                // Add the form input as child of the temporary form element, removing the form input from the DOM.\r\n                this.renderer.appendChild(helperFormEl, fileInputEl);\r\n                // Reset the form, thus clearing the input element of any files.\r\n                helperFormEl.reset();\r\n                // Add the file input back to the DOM in place of the file input placeholder element.\r\n                this.renderer.insertBefore(fileInputContainerEl, fileInputEl, fileInputPlaceholderEl);\r\n                // Remove the input placeholder from the DOM\r\n                this.renderer.removeChild(fileInputContainerEl, fileInputPlaceholderEl);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Get a cached HTML form element as a helper element to clear the file input element.\r\n     */\r\n    getHelperFormElement() {\r\n        if (!this.helperFormEl) {\r\n            this.helperFormEl = this.renderer.createElement('form');\r\n        }\r\n        return this.helperFormEl;\r\n    }\r\n    /**\r\n     * Get a cached HTML div element to be used as placeholder for the file input element when clearing said element.\r\n     */\r\n    getFileInputPlaceholderElement() {\r\n        if (!this.fileInputPlaceholderEl) {\r\n            this.fileInputPlaceholderEl = this.renderer.createElement('div');\r\n        }\r\n        return this.fileInputPlaceholderEl;\r\n    }\r\n    canGetAsEntry(item) {\r\n        return !!item.webkitGetAsEntry;\r\n    }\r\n    isDropzoneDisabled() {\r\n        return (this.globalDraggingInProgress || this.disabled);\r\n    }\r\n    addToQueue(item) {\r\n        this.files.push(item);\r\n    }\r\n    preventAndStop(event) {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n};\nNgxFileDropComponent.ɵfac = function NgxFileDropComponent_Factory(t) { return new (t || NgxFileDropComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nNgxFileDropComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxFileDropComponent, selectors: [[\"ngx-file-drop\"]], contentQueries: function NgxFileDropComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgxFileDropContentTemplateDirective, true, TemplateRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentTemplate = _t.first);\n    } }, viewQuery: function NgxFileDropComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fileSelector = _t.first);\n    } }, inputs: { accept: \"accept\", directory: \"directory\", multiple: \"multiple\", dropZoneLabel: \"dropZoneLabel\", dropZoneClassName: \"dropZoneClassName\", contentClassName: \"contentClassName\", showBrowseBtn: \"showBrowseBtn\", browseBtnClassName: \"browseBtnClassName\", browseBtnLabel: \"browseBtnLabel\", disabled: \"disabled\" }, outputs: { onFileDrop: \"onFileDrop\", onFileOver: \"onFileOver\", onFileLeave: \"onFileLeave\" }, decls: 7, vars: 15, consts: [[3, \"className\", \"drop\", \"dragover\", \"dragleave\"], [3, \"className\"], [\"type\", \"file\", 1, \"ngx-file-drop__file-input\", 3, \"accept\", \"multiple\", \"change\"], [\"fileSelector\", \"\"], [\"defaultContentTemplate\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"ngx-file-drop__drop-zone-label\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"ngx-file-drop__drop-zone-label\"], [\"type\", \"button\", 3, \"className\", \"value\", \"click\"]], template: function NgxFileDropComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"drop\", function NgxFileDropComponent_Template_div_drop_0_listener($event) { return ctx.dropFiles($event); })(\"dragover\", function NgxFileDropComponent_Template_div_dragover_0_listener($event) { return ctx.onDragOver($event); })(\"dragleave\", function NgxFileDropComponent_Template_div_dragleave_0_listener($event) { return ctx.onDragLeave($event); });\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"input\", 2, 3);\n        ɵngcc0.ɵɵlistener(\"change\", function NgxFileDropComponent_Template_input_change_2_listener($event) { return ctx.uploadFiles($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, NgxFileDropComponent_ng_template_4_Template, 2, 2, \"ng-template\", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(6, NgxFileDropComponent_ng_template_6_Template, 0, 0, \"ng-template\", 5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r189 = ɵngcc0.ɵɵreference(5);\n        ɵngcc0.ɵɵclassProp(\"ngx-file-drop__drop-zone--over\", ctx.isDraggingOverDropZone);\n        ɵngcc0.ɵɵproperty(\"className\", ctx.dropZoneClassName);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"className\", ctx.contentClassName);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"accept\", ctx.accept)(\"multiple\", ctx.multiple);\n        ɵngcc0.ɵɵattribute(\"directory\", ctx.directory || undefined)(\"webkitdirectory\", ctx.directory || undefined)(\"mozdirectory\", ctx.directory || undefined)(\"msdirectory\", ctx.directory || undefined)(\"odirectory\", ctx.directory || undefined);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.contentTemplate || _r189)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(13, _c1, ctx.openFileSelector));\n    } }, directives: [ɵngcc1.NgTemplateOutlet, ɵngcc1.NgIf], styles: [\".ngx-file-drop__drop-zone[_ngcontent-%COMP%]{height:100px;margin:auto;border:2px dotted #0782d0;border-radius:30px}.ngx-file-drop__drop-zone--over[_ngcontent-%COMP%]{background-color:rgba(147,147,147,.5)}.ngx-file-drop__content[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;height:100px;color:#0782d0}.ngx-file-drop__drop-zone-label[_ngcontent-%COMP%]{text-align:center}.ngx-file-drop__file-input[_ngcontent-%COMP%]{display:none}\"] });\r\nNgxFileDropComponent.ctorParameters = () => [\r\n    { type: NgZone },\r\n    { type: Renderer2 }\r\n];\r\n__decorate$1([\r\n    Input(),\r\n    __metadata$1(\"design:type\", String)\r\n], NgxFileDropComponent.prototype, \"accept\", void 0);\r\n__decorate$1([\r\n    Input(),\r\n    __metadata$1(\"design:type\", Boolean)\r\n], NgxFileDropComponent.prototype, \"directory\", void 0);\r\n__decorate$1([\r\n    Input(),\r\n    __metadata$1(\"design:type\", Boolean)\r\n], NgxFileDropComponent.prototype, \"multiple\", void 0);\r\n__decorate$1([\r\n    Input(),\r\n    __metadata$1(\"design:type\", String)\r\n], NgxFileDropComponent.prototype, \"dropZoneLabel\", void 0);\r\n__decorate$1([\r\n    Input(),\r\n    __metadata$1(\"design:type\", String)\r\n], NgxFileDropComponent.prototype, \"dropZoneClassName\", void 0);\r\n__decorate$1([\r\n    Input(),\r\n    __metadata$1(\"design:type\", String)\r\n], NgxFileDropComponent.prototype, \"contentClassName\", void 0);\r\n__decorate$1([\r\n    Input(),\r\n    __metadata$1(\"design:type\", Boolean),\r\n    __metadata$1(\"design:paramtypes\", [Boolean])\r\n], NgxFileDropComponent.prototype, \"disabled\", null);\r\n__decorate$1([\r\n    Input(),\r\n    __metadata$1(\"design:type\", Boolean)\r\n], NgxFileDropComponent.prototype, \"showBrowseBtn\", void 0);\r\n__decorate$1([\r\n    Input(),\r\n    __metadata$1(\"design:type\", String)\r\n], NgxFileDropComponent.prototype, \"browseBtnClassName\", void 0);\r\n__decorate$1([\r\n    Input(),\r\n    __metadata$1(\"design:type\", String)\r\n], NgxFileDropComponent.prototype, \"browseBtnLabel\", void 0);\r\n__decorate$1([\r\n    Output(),\r\n    __metadata$1(\"design:type\", EventEmitter)\r\n], NgxFileDropComponent.prototype, \"onFileDrop\", void 0);\r\n__decorate$1([\r\n    Output(),\r\n    __metadata$1(\"design:type\", EventEmitter)\r\n], NgxFileDropComponent.prototype, \"onFileOver\", void 0);\r\n__decorate$1([\r\n    Output(),\r\n    __metadata$1(\"design:type\", EventEmitter)\r\n], NgxFileDropComponent.prototype, \"onFileLeave\", void 0);\r\n__decorate$1([\r\n    ContentChild(NgxFileDropContentTemplateDirective, { read: TemplateRef }),\r\n    __metadata$1(\"design:type\", TemplateRef)\r\n], NgxFileDropComponent.prototype, \"contentTemplate\", void 0);\r\n__decorate$1([\r\n    ViewChild('fileSelector', { static: true }),\r\n    __metadata$1(\"design:type\", ElementRef)\r\n], NgxFileDropComponent.prototype, \"fileSelector\", void 0);\r\nNgxFileDropComponent = __decorate$1([ __metadata$1(\"design:paramtypes\", [NgZone,\r\n        Renderer2])\r\n], NgxFileDropComponent);\n\nvar __decorate$2 = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nlet NgxFileDropModule = class NgxFileDropModule {\r\n};\nNgxFileDropModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxFileDropModule, bootstrap: function () { return [NgxFileDropComponent]; } });\nNgxFileDropModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxFileDropModule_Factory(t) { return new (t || NgxFileDropModule)(); }, providers: [], imports: [[\n            CommonModule\n        ]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxFileDropContentTemplateDirective, [{\n        type: Directive,\n        args: [{ selector: '[ngx-file-drop-content-tmp]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxFileDropComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-file-drop',\n                template: \"<div [className]=\\\"dropZoneClassName\\\"\\r\\n     [class.ngx-file-drop__drop-zone--over]=\\\"isDraggingOverDropZone\\\"\\r\\n     (drop)=\\\"dropFiles($event)\\\"\\r\\n     (dragover)=\\\"onDragOver($event)\\\"\\r\\n     (dragleave)=\\\"onDragLeave($event)\\\">\\r\\n  <div [className]=\\\"contentClassName\\\">\\r\\n    <input \\r\\n      type=\\\"file\\\" \\r\\n      #fileSelector \\r\\n      [accept]=\\\"accept\\\" \\r\\n      [attr.directory]=\\\"directory || undefined\\\" \\r\\n      [attr.webkitdirectory]=\\\"directory || undefined\\\"\\r\\n      [attr.mozdirectory]=\\\"directory || undefined\\\"\\r\\n      [attr.msdirectory]=\\\"directory || undefined\\\"\\r\\n      [attr.odirectory]=\\\"directory || undefined\\\"\\r\\n      [multiple]=\\\"multiple\\\"\\r\\n      (change)=\\\"uploadFiles($event)\\\" \\r\\n      class=\\\"ngx-file-drop__file-input\\\" \\r\\n    />\\r\\n\\r\\n    <ng-template #defaultContentTemplate>\\r\\n      <div *ngIf=\\\"dropZoneLabel\\\" class=\\\"ngx-file-drop__drop-zone-label\\\">{{dropZoneLabel}}</div>\\r\\n      <div *ngIf=\\\"showBrowseBtn\\\">\\r\\n        <input type=\\\"button\\\" [className]=\\\"browseBtnClassName\\\" value=\\\"{{browseBtnLabel}}\\\" (click)=\\\"openFileSelector($event)\\\" />\\r\\n      </div>\\r\\n    </ng-template>\\r\\n\\r\\n    <ng-template\\r\\n      [ngTemplateOutlet]=\\\"contentTemplate || defaultContentTemplate\\\"\\r\\n      [ngTemplateOutletContext]=\\\"{ openFileSelector: openFileSelector }\\\">\\r\\n    </ng-template>\\r\\n  </div>\\r\\n</div>\\r\\n\",\n                styles: [\".ngx-file-drop__drop-zone{height:100px;margin:auto;border:2px dotted #0782d0;border-radius:30px}.ngx-file-drop__drop-zone--over{background-color:rgba(147,147,147,.5)}.ngx-file-drop__content{display:flex;align-items:center;justify-content:center;height:100px;color:#0782d0}.ngx-file-drop__drop-zone-label{text-align:center}.ngx-file-drop__file-input{display:none}\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.Renderer2 }]; }, { accept: [{\n            type: Input\n        }], directory: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], dropZoneLabel: [{\n            type: Input\n        }], dropZoneClassName: [{\n            type: Input\n        }], contentClassName: [{\n            type: Input\n        }], showBrowseBtn: [{\n            type: Input\n        }], browseBtnClassName: [{\n            type: Input\n        }], browseBtnLabel: [{\n            type: Input\n        }], onFileDrop: [{\n            type: Output\n        }], onFileOver: [{\n            type: Output\n        }], onFileLeave: [{\n            type: Output\n        }], disabled: [{\n            type: Input\n        }], contentTemplate: [{\n            type: ContentChild,\n            args: [NgxFileDropContentTemplateDirective, { read: TemplateRef }]\n        }], fileSelector: [{\n            type: ViewChild,\n            args: ['fileSelector', { static: true }]\n        }] }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxFileDropModule, { declarations: function () { return [NgxFileDropComponent,\n        NgxFileDropContentTemplateDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgxFileDropComponent,\n        NgxFileDropContentTemplateDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxFileDropModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    NgxFileDropComponent,\n                    NgxFileDropContentTemplateDirective,\n                ],\n                imports: [\n                    CommonModule\n                ],\n                exports: [\n                    NgxFileDropComponent,\n                    NgxFileDropContentTemplateDirective,\n                ],\n                providers: [],\n                bootstrap: [\n                    NgxFileDropComponent\n                ]\n            }]\n    }], null, null); })();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgxFileDropComponent, NgxFileDropEntry, NgxFileDropModule, NgxFileDropContentTemplateDirective as ɵa };\n\n//# sourceMappingURL=ngx-file-drop.js.map"],"sourceRoot":"webpack:///"}