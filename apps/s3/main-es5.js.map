{"version":3,"sources":["webpack:///home/smcfall2/deploy/rmslow/rms-frontend/libs/core/src/index.ts","webpack:///home/smcfall2/deploy/rmslow/rms-frontend/libs/core/src/lib/core.module.ts","webpack:///home/smcfall2/deploy/rmslow/rms-frontend/libs/file-explorer/src/index.ts","webpack:///home/smcfall2/deploy/rmslow/rms-frontend/libs/file-explorer/src/lib/file-explorer.module.ts","webpack:///home/smcfall2/deploy/rmslow/rms-frontend/libs/file-explorer/src/lib/file-explorer/file-explorer.component.ts","webpack:///home/smcfall2/deploy/rmslow/rms-frontend/libs/file-explorer/src/lib/file-explorer/file-explorer.component.html","webpack:///home/smcfall2/deploy/rmslow/rms-frontend/libs/file-explorer/src/lib/models/file-element.ts","webpack:///home/smcfall2/deploy/rmslow/rms-frontend/libs/file-explorer/src/lib/new-folder-modal/new-folder-modal.component.ts","webpack:///home/smcfall2/deploy/rmslow/rms-frontend/libs/file-explorer/src/lib/new-folder-modal/new-folder-modal.component.html","webpack:///home/smcfall2/deploy/rmslow/rms-frontend/libs/file-explorer/src/lib/rename-modal/rename-modal.component.ts","webpack:///home/smcfall2/deploy/rmslow/rms-frontend/libs/file-explorer/src/lib/rename-modal/rename-modal.component.html","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/+state/file.actions.ts","webpack:///src/app/+state/file.state.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///crypto (ignored)"],"names":["CoreModule","imports","exports","FileExplorerModule","declarations","$event","preventDefault","FileExplorerComponent","dialog","selected","_fileElements","folderAdded","filesUploaded","elementRemoved","elementRenamed","elementMoved","navigatedDown","fileSelected","navigatedUp","encryptEmitter","decryptEmitter","element","length","includes","push","forEach","elem","emit","event","ctrlKey","toggleInArray","isFolder","moveTo","dialogRef","open","afterClosed","subscribe","res","name","viewChild","openMenu","files","srcElement","fileArray","i","file","fileElem","actualFile","total","count","droppedFile","fileEntry","isFile","relPath","relativePath","pathArray","split","pop","join","parent","array","index","indexOf","splice","value","openNewFolderDialog","uploadFile","selector","templateUrl","styleUrls","changeDetection","OnPush","FileElement","NewFolderModalComponent","RenameModalComponent","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","id","UploadFiles","type","AddFolder","folder","DeleteFolder","DeleteFile","RenameFile","RenameFolder","MoveFolder","MoveFile","NavigateTo","NavigateUp","ExplorerState","ctx","action","state","getState","setState","hereState","filter","entry","filteredFiles","find","currentRoot","newRoot","a","defaults","AppComponent","store","title","canNavigateUp","password","serverkey","rootSub","root$","initialFolders","dispatch","currentPath","popFromPath","pushToPath","alert","pathFolders","createfFolders","totalIndex","path","previd","newFolderName","map","filePath","folderName","p","text","encrypted","encrypt","toString","startsWith","decrypted1","decrypt","Utf8","decrypted","addFolder","removeElement","navigateToFolder","navigateUp","renameElement","moveElement","currentSpace","AppModule","forRoot","providers","bootstrap","environment","production","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["export * from './lib/core.module';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\n//Angular Material Components\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatListModule} from '@angular/material/list';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatPaginatorModule} from '@angular/material/paginator';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatCheckboxModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule\n  ],\n  exports:[\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatCheckboxModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule\n  ]\n})\nexport class CoreModule {}\n","export * from './lib/file-explorer.module';\nexport * from './lib/models/file-element';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoreModule } from '@rms-frontend/core';\nimport { FileExplorerComponent } from './file-explorer/file-explorer.component';\nimport { RenameModalComponent } from './rename-modal/rename-modal.component';\nimport { NewFolderModalComponent } from './new-folder-modal/new-folder-modal.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxFileDropModule } from 'ngx-file-drop';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxFileDropModule\n  ],\n  declarations: [\n    FileExplorerComponent,\n    RenameModalComponent,\n    NewFolderModalComponent\n  ],\n  exports: [FileExplorerComponent]\n})\nexport class FileExplorerModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ComponentFactoryResolver\n} from '@angular/core';\nimport { FileElement } from '../models/file-element';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatDialog } from '@angular/material/dialog';\nimport { NewFolderModalComponent } from '../new-folder-modal/new-folder-modal.component';\nimport { RenameModalComponent } from '../rename-modal/rename-modal.component';\nimport {\n  NgxFileDropEntry,\n  FileSystemFileEntry,\n  FileSystemDirectoryEntry\n} from 'ngx-file-drop';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'rms-file-explorer',\n  templateUrl: './file-explorer.component.html',\n  styleUrls: ['./file-explorer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileExplorerComponent {\n  constructor(public dialog: MatDialog) {}\n\n  dragged: boolean;\n  selected: FileElement[] = [];\n  _fileElements: FileElement[] = [];\n  @Input('fileElements')\n  set fileElements(value: FileElement[]) {\n    this._fileElements = value;\n    this.selected = [];\n  }\n  @Input() canNavigateUp: boolean;\n  @Input() path: string;\n\n  @Output() folderAdded = new EventEmitter<{ name: string }>();\n  @Output() filesUploaded = new EventEmitter<FileElement[]>();\n  @Output() elementRemoved = new EventEmitter<FileElement>();\n  @Output() elementRenamed = new EventEmitter<FileElement>();\n  @Output() elementMoved = new EventEmitter<{\n    element: FileElement;\n    moveTo: FileElement;\n  }>();\n  @Output() navigatedDown = new EventEmitter<FileElement>();\n  @Output() fileSelected = new EventEmitter<FileElement>();\n  @Output() navigatedUp = new EventEmitter();\n  @Output() encryptEmitter = new EventEmitter<FileElement>();\n  @Output() decryptEmitter = new EventEmitter<FileElement>();\n\n  deleteElement(element: FileElement) {\n    if (this.selected.length) {\n      if (!this.selected.includes(element)) this.selected.push(element);\n      this.selected.forEach(elem => {\n        this.elementRemoved.emit(elem);\n      });\n    } else this.elementRemoved.emit(element);\n  }\n\n  navigate(element: FileElement, event: MouseEvent) {\n    if (event.ctrlKey) {\n      this.selected = this.toggleInArray(this.selected, element);\n    } else {\n      this.selected = [];\n      if (element.isFolder) {\n        this.navigatedDown.emit(element);\n      } else {\n        this.fileSelected.emit(element);\n      }\n    }\n  }\n\n  navigateUp() {\n    this.navigatedUp.emit();\n  }\n\n  moveElement(element: FileElement, moveTo: FileElement) {\n    if (this.selected.length) {\n      if (!this.selected.includes(element)) this.selected.push(element);\n      this.selected.forEach(elem => {\n        this.elementMoved.emit({ element: elem, moveTo: moveTo });\n      });\n    } else this.elementMoved.emit({ element: element, moveTo: moveTo });\n  }\n\n  openNewFolderDialog() {\n    const dialogRef = this.dialog.open(NewFolderModalComponent);\n    dialogRef.afterClosed().subscribe(res => {\n      if (res) {\n        this.folderAdded.emit({ name: res });\n      }\n    });\n  }\n\n  openRenameDialog(element: FileElement) {\n    const dialogRef = this.dialog.open(RenameModalComponent);\n    dialogRef.afterClosed().subscribe(res => {\n      if (res) {\n        element.name = res;\n        this.elementRenamed.emit(element);\n      }\n    });\n  }\n\n  openMenu(event: MouseEvent, element: FileElement, viewChild: MatMenuTrigger) {\n    event.preventDefault();\n    viewChild.openMenu();\n  }\n\n  uploadFile(event) {\n    const files: FileList = event.srcElement.files;\n    const fileArray: FileElement[] = [];\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      const fileElem = new FileElement();\n      fileElem.actualFile = file;\n      fileElem.isFolder = false;\n      fileElem.name = file.name;\n      fileArray.push(fileElem);\n    }\n    this.filesUploaded.emit(fileArray);\n  }\n\n  public dropped(files: NgxFileDropEntry[], element?: FileElement) {\n    const fileArray: FileElement[] = [];\n    const total = files.length;\n    let count = 0;\n    for (const droppedFile of files) {\n      // Is it a file?\n      if (droppedFile.fileEntry.isFile) {\n        const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\n        fileEntry.file((file: File) => {\n          let relPath = droppedFile.relativePath;\n          const pathArray = relPath.split('/');\n          pathArray.pop();\n          relPath = pathArray.join('/');\n          count++;\n          const fileElem = new FileElement();\n          fileElem.actualFile = file;\n          fileElem.isFolder = false;\n          fileElem.name = file.name;\n          fileElem.parent = relPath;\n          fileArray.push(fileElem);\n          if (count === total) this.filesUploaded.emit(fileArray);\n        });\n      } else {\n        // It was a directory (empty directories are added, otherwise only files)\n        const fileEntry = droppedFile.fileEntry as FileSystemDirectoryEntry;\n      }\n    }\n  }\n\n  public fileOver(event) {\n    //Add any fileOver code\n  }\n\n  public fileLeave(event) {\n    //Add any fileLeave code\n  }\n\n  encrypt(file: FileElement) {\n    this.encryptEmitter.emit(file);\n  }\n\n  decrypt(file: FileElement) {\n    this.decryptEmitter.emit(file);\n  }\n\n  private toggleInArray(array: any[], element: any) {\n    const index = array.indexOf(element);\n    if (index === -1) {\n      array.push(element);\n    } else {\n      array.splice(index, 1);\n    }\n    return array;\n  }\n}\n","<div (dragover)=\"dragged = true\">\n  <mat-toolbar>\n    <button mat-icon-button *ngIf=\"canNavigateUp\" (click)=\"navigateUp()\">\n      <mat-icon>\n        arrow_back\n      </mat-icon>\n    </button>\n    <span style=\"margin-left: 8px\"> {{ path || 'Files' }} </span>\n    <span class=\"spacer\"></span>\n    <span style=\"font-size: small;\" *ngIf=\"selected.length\"\n      >{{ selected.length }} File(s) Selected</span\n    >\n    <button *ngIf=\"selected.length\" mat-icon-button (click)=\"selected = []\">\n      <mat-icon>\n        clear\n      </mat-icon>\n    </button>\n    <button mat-icon-button (click)=\"openNewFolderDialog()\">\n      <mat-icon>\n        create_new_folder\n      </mat-icon>\n    </button>\n    <button mat-icon-button (click)=\"uploader.click()\">\n      <mat-icon>\n        cloud_upload\n      </mat-icon>\n    </button>\n  </mat-toolbar>\n\n  <div\n    class=\"container\"\n    fxFlex\n    fxLayout=\"row\"\n    fxLayoutAlign=\"space-between stretch\"\n  >\n    <div class=\"content\" fxFlex fxLayout=\"row\">\n      <mat-grid-list cols=\"8\" rowHeight=\"100px\" fxFlex>\n        <mat-grid-tile\n          *ngFor=\"let element of _fileElements\"\n          class=\"file-or-folder\"\n        >\n          <span\n            [matMenuTriggerFor]=\"rootMenu\"\n            [matMenuTriggerData]=\"{ element: element }\"\n            #menuTrigger=\"matMenuTrigger\"\n          >\n          </span>\n          <div\n            class=\"element-container\"\n            [ngStyle]=\"{\n              'background-color': selected.includes(element) ? 'grey' : ''\n            }\"\n            (click)=\"navigate(element, $event)\"\n            (contextmenu)=\"menuTrigger.openMenu(); $event.preventDefault()\"\n          >\n            <mat-icon\n              color=\"primary\"\n              class=\"file-or-folder-icon pointer\"\n              *ngIf=\"element.isFolder\"\n            >\n              folder\n            </mat-icon>\n            <mat-icon\n              color=\"primary\"\n              class=\"file-or-folder-icon pointer\"\n              *ngIf=\"!element.isFolder\"\n            >\n              insert_drive_file\n            </mat-icon>\n\n            <span>{{ element.name }}</span>\n          </div>\n        </mat-grid-tile>\n      </mat-grid-list>\n    </div>\n  </div>\n  <mat-menu #rootMenu=\"matMenu\" [overlapTrigger]=\"false\">\n    <ng-template matMenuContent let-element=\"element\">\n      <button\n        mat-menu-item\n        [matMenuTriggerFor]=\"moveToMenu\"\n        [matMenuTriggerData]=\"{ self: element }\"\n      >\n        <mat-icon>open_with</mat-icon>\n        <span>Move To</span>\n      </button>\n      <button\n        mat-menu-item\n        (click)=\"openRenameDialog(element)\"\n        [disabled]=\"selected.length > 0\"\n      >\n        <mat-icon>edit</mat-icon>\n        <span>Rename</span>\n      </button>\n      <button mat-menu-item (click)=\"deleteElement(element)\">\n        <mat-icon>delete</mat-icon>\n        <span>Delete</span>\n      </button>\n      <button\n        mat-menu-item\n        (click)=\"encrypt(element)\"\n        *ngIf=\"!element.isFolder\"\n      >\n        <mat-icon>lock</mat-icon>\n        <span>Encrypt</span>\n      </button>\n      <button\n        mat-menu-item\n        (click)=\"decrypt(element)\"\n        *ngIf=\"!element.isFolder\"\n      >\n        <mat-icon>lock_open</mat-icon>\n        <span>Decrypt</span>\n      </button>\n    </ng-template>\n  </mat-menu>\n\n  <mat-menu #moveToMenu=\"matMenu\">\n    <ng-template matMenuContent let-self=\"self\">\n      <ng-container *ngFor=\"let element of _fileElements\">\n        <button\n          *ngIf=\"\n            element.isFolder &&\n            element.id !== self.id &&\n            !selected.includes(element)\n          \"\n          mat-menu-item\n          (click)=\"moveElement(self, element)\"\n        >\n          {{ element.name }}\n        </button>\n      </ng-container>\n    </ng-template>\n  </mat-menu>\n</div>\n\n<ngx-file-drop\n  *ngIf=\"dragged\"\n  dropZoneLabel=\"Drop files here\"\n  dropZoneClassName=\"drop-area\"\n  contentClassName=\"drop-content\"\n  (onFileDrop)=\"dropped($event); dragged = false\"\n  (onFileOver)=\"fileOver($event)\"\n  (onFileLeave)=\"fileLeave($event); dragged = false\"\n>\n</ngx-file-drop>\n\n<input hidden multiple type=\"file\" #uploader (change)=\"uploadFile($event)\" />\n","export class FileElement {\n  id?: string;\n  isFolder: boolean;\n  name: string;\n  parent: string;\n  actualFile?: File;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 's3-new-folder-modal',\n  templateUrl: './new-folder-modal.component.html',\n  styleUrls: ['./new-folder-modal.component.scss']\n})\nexport class NewFolderModalComponent implements OnInit {\n  folderName: string;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<h1 mat-dialog-title>Create a new folder</h1>\n\n<mat-dialog-content>\n  <mat-form-field class=\"example-full-width\">\n    <input matInput placeholder=\"Folder Name\" [(ngModel)]=\"folderName\" />\n  </mat-form-field>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n  <button mat-raised-button mat-dialog-close>Cancel</button>\n  <button mat-raised-button [mat-dialog-close]=\"folderName\" color=\"primary\">\n    OK\n  </button>\n</mat-dialog-actions>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 's3-rename-modal',\n  templateUrl: './rename-modal.component.html',\n  styleUrls: ['./rename-modal.component.scss']\n})\nexport class RenameModalComponent implements OnInit {\n  folderName: string;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<h1 mat-dialog-title>Rename Element</h1>\n\n<mat-dialog-content>\n  <mat-form-field class=\"example-full-width\">\n    <input matInput placeholder=\"Folder Name\" [(ngModel)]=\"folderName\" />\n  </mat-form-field>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n  <button mat-raised-button mat-dialog-close>Cancel</button>\n  <button mat-raised-button [mat-dialog-close]=\"folderName\" color=\"primary\">\n    OK\n  </button>\n</mat-dialog-actions>\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { FileElement } from '@rms-frontend/file-explorer';\n\nexport class UploadFiles {\n  static readonly type = '[Explorer] Upload Files';\n  constructor(public files: FileElement[]) {}\n}\n\nexport class AddFolder {\n  static readonly type = '[Explorer] Add Folder';\n  constructor(public folder: FileElement) {}\n}\n\nexport class DeleteFolder {\n  static readonly type = '[Explorer] Delete Folder';\n  constructor(public id: string) {}\n}\n\nexport class DeleteFile {\n  static readonly type = '[Explorer] Delete File';\n  constructor(public id: string) {}\n}\n\nexport class RenameFile {\n  static readonly type = '[Explorer] Rename File';\n  constructor(public id: string, public name: string) {}\n}\n\nexport class RenameFolder {\n  static readonly type = '[Explorer] Rename Folder';\n  constructor(public id: string, public name: string) {}\n}\n\nexport class MoveFolder {\n  static readonly type = '[Explorer] Move Folder';\n  constructor(public id: string, public parent: string) {}\n}\n\nexport class MoveFile {\n  static readonly type = '[Explorer] Move File';\n  constructor(public id: string, public parent: string) {}\n}\n\nexport class NavigateTo {\n  static readonly type = '[Explorer] Navigate To';\n  constructor(public folder: FileElement) {}\n}\n\nexport class NavigateUp {\n  static readonly type = '[Explorer] Navigate Up';\n  constructor() {}\n}\n","import { State, Action, StateContext, Selector } from '@ngxs/store';\nimport { FileElement } from '@rms-frontend/file-explorer';\nimport {\n  UploadFiles,\n  AddFolder,\n  DeleteFolder,\n  DeleteFile,\n  RenameFile,\n  RenameFolder,\n  MoveFolder,\n  MoveFile,\n  NavigateTo,\n  NavigateUp\n} from './file.actions';\nimport { ImmutableContext, ImmutableSelector } from '@ngxs-labs/immer-adapter';\nimport { Injectable } from '@angular/core';\n\nexport interface ExplorerStateModel {\n  files: FileElement[];\n  currentRoot: FileElement;\n}\n\n@State<ExplorerStateModel>({\n  name: 'explorer',\n  defaults: {\n    files: [],\n    currentRoot: { id: 'root', name: 'Files', isFolder: true, parent: '' }\n  }\n})\n@Injectable()\nexport class ExplorerState {\n  @Selector()\n  @ImmutableSelector()\n  static currentSpace(state: ExplorerStateModel) {\n    return state.files.filter(file => file.parent === state.currentRoot.id);\n  }\n\n  @Selector()\n  @ImmutableSelector()\n  static currentRoot(state: ExplorerStateModel) {\n    return state.currentRoot;\n  }\n\n  @Action(UploadFiles)\n  @ImmutableContext()\n  uploadFiles(ctx: StateContext<ExplorerStateModel>, action: UploadFiles) {\n    const state = ctx.getState();\n    const files = state.files;\n    files.push(...action.files);\n    ctx.setState((hereState: ExplorerStateModel) => {\n      hereState.files = files;\n      return hereState;\n    });\n    //Add code to send files to server here\n  }\n\n  @Action(AddFolder)\n  @ImmutableContext()\n  addFolder(ctx: StateContext<ExplorerStateModel>, action: AddFolder) {\n    const state = ctx.getState();\n    const files = state.files;\n    files.push(action.folder);\n    ctx.setState((hereState: ExplorerStateModel) => {\n      hereState.files = files;\n      return hereState;\n    });\n    //Add code to send files to server here\n  }\n  @Action(DeleteFolder)\n  @ImmutableContext()\n  deleteFolder(ctx: StateContext<ExplorerStateModel>, action: DeleteFolder) {\n    const state = ctx.getState();\n    const files = state.files;\n    ctx.setState((hereState: ExplorerStateModel) => {\n      hereState.files = files.filter(\n        entry => entry.id !== action.id && entry.parent !== action.id\n      );\n      return hereState;\n    });\n    //Add code to send files to server here\n  }\n\n  @Action(DeleteFile)\n  @ImmutableContext()\n  deleteFile(ctx: StateContext<ExplorerStateModel>, action: DeleteFile) {\n    const state = ctx.getState();\n    const files = state.files;\n    const filteredFiles = files.filter(entry => entry.id !== action.id);\n    ctx.setState((hereState: ExplorerStateModel) => {\n      hereState.files = filteredFiles;\n      return hereState;\n    });\n    //Add code to send files to server here\n  }\n\n  @Action(RenameFile)\n  @ImmutableContext()\n  renameFile(ctx: StateContext<ExplorerStateModel>, action: RenameFile) {\n    const state = ctx.getState();\n    const files = state.files;\n    files.find(file => file.id === action.id).name = action.name;\n    ctx.setState((hereState: ExplorerStateModel) => {\n      hereState.files = files;\n      return hereState;\n    });\n    //Add code to send files to server here\n  }\n\n  @Action(RenameFolder)\n  @ImmutableContext()\n  renameFolder(ctx: StateContext<ExplorerStateModel>, action: RenameFolder) {\n    const state = ctx.getState();\n    const files = state.files;\n    files.find(file => file.id === action.id).name = action.name;\n    ctx.setState((hereState: ExplorerStateModel) => {\n      hereState.files = files;\n      return hereState;\n    });\n    //Add code to send files to server here\n  }\n\n  @Action(MoveFolder)\n  @ImmutableContext()\n  moveFolder(ctx: StateContext<ExplorerStateModel>, action: MoveFolder) {\n    const state = ctx.getState();\n    const files = state.files;\n    files.find(file => file.id === action.id).parent = action.parent;\n    ctx.setState((hereState: ExplorerStateModel) => {\n      hereState.files = files;\n      return hereState;\n    });\n    //Add code to send files to server here\n  }\n\n  @Action(MoveFile)\n  @ImmutableContext()\n  moveFile(ctx: StateContext<ExplorerStateModel>, action: MoveFile) {\n    const state = ctx.getState();\n    const files = state.files;\n    files.find(file => file.id === action.id).parent = action.parent;\n    ctx.setState((hereState: ExplorerStateModel) => {\n      hereState.files = files;\n      return hereState;\n    });\n    //Add code to send files to server here\n  }\n\n  @Action(NavigateTo)\n  @ImmutableContext()\n  navigateTo(ctx: StateContext<ExplorerStateModel>, action: NavigateTo) {\n    ctx.setState((hereState: ExplorerStateModel) => {\n      hereState.currentRoot = action.folder;\n      return hereState;\n    });\n    //Add code to send files to server here\n  }\n\n  @Action(NavigateUp)\n  @ImmutableContext()\n  navigateUp(ctx: StateContext<ExplorerStateModel>, action: NavigateUp) {\n    const state = ctx.getState();\n    const files = state.files;\n    const newRoot = files.find(a => a.id === state.currentRoot.parent) || {\n      id: 'root',\n      name: 'Files',\n      isFolder: true,\n      parent: ''\n    };\n    ctx.setState((hereState: ExplorerStateModel) => {\n      hereState.currentRoot = newRoot;\n      return hereState;\n    });\n    //Add code to send files to server here\n  }\n}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { FileElement } from '@rms-frontend/file-explorer';\nimport { Select, Store } from '@ngxs/store';\nimport { v4 } from 'uuid';\nimport {\n  AddFolder,\n  DeleteFile,\n  DeleteFolder,\n  MoveFolder,\n  MoveFile,\n  RenameFolder,\n  UploadFiles,\n  NavigateTo,\n  NavigateUp,\n  RenameFile\n} from './+state/file.actions';\nimport { ExplorerState } from './+state/file.state';\nimport * as CryptoJS from 'crypto-js';\n\n@Component({\n  selector: 's3-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent implements OnInit {\n  title = 's3';\n  fileElements: Observable<FileElement[]>;\n  currentRoot: FileElement;\n  currentPath: string;\n  canNavigateUp = false;\n  password = 'testpassword';\n  serverkey = 'randomkey';\n\n  @Select(ExplorerState.currentSpace) files$: Observable<FileElement[]>;\n\n  @Select(ExplorerState.currentRoot) root$: Observable<FileElement>;\n\n  rootSub = this.root$.subscribe(a => {\n    this.currentRoot = a;\n    this.canNavigateUp = !!a?.parent;\n  });\n\n  ngOnInit(): void {\n    const initialFolders: FileElement[] = [];\n    for (let i = 0; i < 10; i++) {\n      const folder = new FileElement();\n      folder.isFolder = true;\n      folder.name = `Folder${i}`;\n      folder.parent = 'root';\n      folder.id = v4();\n      initialFolders.push(folder);\n    }\n    initialFolders.forEach(element => {\n      this.store.dispatch(new AddFolder(element));\n    });\n  }\n\n  constructor(public store: Store) {}\n\n  addFolder(folder: { name: string }) {\n    this.store.dispatch(\n      new AddFolder({\n        id: v4(),\n        isFolder: true,\n        name: folder.name,\n        parent: this.currentRoot ? this.currentRoot.id : 'root'\n      })\n    );\n  }\n\n  removeElement(element: FileElement) {\n    if (element.isFolder) this.store.dispatch(new DeleteFolder(element.id));\n    else this.store.dispatch(new DeleteFile(element.id));\n  }\n\n  moveElement(event: { element: FileElement; moveTo: FileElement }) {\n    if (event.element.isFolder)\n      this.store.dispatch(new MoveFolder(event.element.id, event.moveTo.id));\n    else this.store.dispatch(new MoveFile(event.element.id, event.moveTo.id));\n  }\n\n  renameElement(element: FileElement) {\n    if (element.isFolder)\n      this.store.dispatch(new RenameFolder(element.id, element.name));\n    else this.store.dispatch(new RenameFile(element.id, element.name));\n  }\n\n  navigateUp() {\n    this.store.dispatch(new NavigateUp());\n    this.currentPath = this.popFromPath(this.currentPath) || 'Files';\n  }\n\n  navigateToFolder(element: FileElement) {\n    this.store.dispatch(new NavigateTo(element));\n    this.currentPath = this.pushToPath(this.currentPath, element.name);\n    this.canNavigateUp = true;\n  }\n\n  fileSelected(file: FileElement) {\n    alert(`You clicked ${file.name}`);\n  }\n\n  filesUploaded(files: FileElement[]) {\n    const pathFolders: FileElement[] = [];\n    const createfFolders: string[] = [];\n    files.forEach((element, totalIndex) => {\n      if (element.parent) {\n        const path = element.parent.split('/');\n        let previd = '';\n        path.forEach((newFolderName, index, array) => {\n          if (!createfFolders.includes(newFolderName)) {\n            createfFolders.push(newFolderName);\n            const folder = new FileElement();\n            folder.isFolder = true;\n            folder.name = newFolderName;\n            if (index === 0) {\n              folder.parent = this.currentRoot?.id || 'root';\n            } else {\n              if (previd.length) folder.parent = previd;\n              else {\n                folder.parent = pathFolders.find(\n                  a => a.name === array[index - 1]\n                ).id;\n              }\n            }\n            folder.id = v4();\n            previd = folder.id;\n            this.store.dispatch(new AddFolder(folder));\n            pathFolders.push(folder);\n          }\n        });\n      }\n    });\n    this.store.dispatch(\n      new UploadFiles(\n        files.map(file => {\n          file.id = v4();\n          if (file.parent) {\n            const filePath = file.parent.split('/');\n            file.parent = pathFolders.find(\n              folder => folder.name === filePath[filePath.length - 1]\n            ).id;\n          } else file.parent = this.currentRoot?.id || 'root';\n          return file;\n        })\n      )\n    );\n  }\n\n  pushToPath(path: string, folderName: string) {\n    if (path === 'Files') path = '';\n    let p = path ? path : '';\n    p += `${folderName}/`;\n    return p;\n  }\n\n  popFromPath(path: string) {\n    let p = path ? path : '';\n    const split = p.split('/');\n    split.splice(split.length - 2, 1);\n    p = split.join('/');\n    return p;\n  }\n\n  encrypt(file: FileElement) {\n    const text = file.name;\n    const encrypted = CryptoJS.AES.encrypt(text, this.password).toString();\n    file.name = CryptoJS.AES.encrypt(\n      encrypted.toString(),\n      this.serverkey\n    ).toString();\n    this.store.dispatch(new RenameFile(file.id, file.name));\n  }\n\n  decrypt(file: FileElement) {\n    if (file.name.startsWith('U2')) {\n      const encrypted = file.name;\n      let decrypted1 = CryptoJS.AES.decrypt(encrypted, this.serverkey);\n      decrypted1 = decrypted1.toString(CryptoJS.enc.Utf8);\n      const decrypted = CryptoJS.AES.decrypt(\n        decrypted1.toString(),\n        this.password\n      );\n      file.name = decrypted.toString(CryptoJS.enc.Utf8);\n      this.store.dispatch(new RenameFile(file.id, file.name));\n    } else alert(`File not encrypted`);\n  }\n}\n","<div style=\"height: 100%; width: 100%; box-sizing: border-box;\">\n  <mat-card\n    style=\"height: 100%; width: 100%; box-sizing: border-box; padding:0\"\n  >\n    <rms-file-explorer\n      [fileElements]=\"files$ | async\"\n      [path]=\"currentPath\"\n      [canNavigateUp]=\"canNavigateUp\"\n      (folderAdded)=\"addFolder($event)\"\n      (elementRemoved)=\"removeElement($event)\"\n      (navigatedDown)=\"navigateToFolder($event)\"\n      (navigatedUp)=\"navigateUp()\"\n      (elementRenamed)=\"renameElement($event)\"\n      (elementMoved)=\"moveElement($event)\"\n      (filesUploaded)=\"filesUploaded($event)\"\n      (fileSelected)=\"fileSelected($event)\"\n      (encryptEmitter)=\"encrypt($event)\"\n      (decryptEmitter)=\"decrypt($event)\"\n    >\n    </rms-file-explorer>\n  </mat-card>\n</div>\n","import { NgModule } from '@angular/core';\n\nimport { CoreModule } from '@rms-frontend/core';\n\nimport { AppComponent } from './app.component';\nimport { NgxsModule } from '@ngxs/store';\nimport { NgxsReduxDevtoolsPluginModule } from '@ngxs/devtools-plugin';\nimport { FileExplorerModule } from '@rms-frontend/file-explorer';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ExplorerState } from './+state/file.state';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    CoreModule,\n    FileExplorerModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxsModule.forRoot([ExplorerState]),\n    NgxsReduxDevtoolsPluginModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}